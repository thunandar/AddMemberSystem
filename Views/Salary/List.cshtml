@model IEnumerable<AddMemberSystem.Models.TB_Salary>

@{
    ViewData["Title"] = "Payroll list";

    Pager pager = new Pager();

    int pageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
    var errorMessage = TempData["ErrorMessage"] as string;

}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<h1 style="font-size: 32px;">Salary</h1>

<table class="table">
    <thead>
        <tr>
            <th>စဉ်</th>
            <th>၀န်ထမ်းအမှတ်</th>
            <th>အခြေခံလစာ</th>
            <th>နှုတ်ယူသည့်ပမာဏ</th>
            <th>လစာပမာဏ</th>
            <th>ခံစားသည့်လ</th>
            <th>Ssb</th>
            <th>ဆန်/ဆီ</th>
             <th>ခွင့်မဲ့</th>
             
            <th>ပေးထားသည့်ရက်</th>
        </tr>
    </thead>
    <tbody class="text-center">
        @{
            var counter = 1;
        }
@foreach (var item in Model) {
        <tr>
                <td>
                    @counter
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.StaffID)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BaseSalary)
                </td>
                <td class="text-danger">
                    @Html.DisplayFor(modelItem => item.Deductions)
                </td>
                <td class="text-success">
                    @Html.DisplayFor(modelItem => item.NetSalary)
                </td>
                 <td>
                    @Html.DisplayFor(modelItem => item.MonthOfSalary)
                </td>
                <td class="text-danger">
                    @Html.DisplayFor(modelItem => item.SocialSecurityDeduction)
                </td>
                <td class="text-danger">
                    @Html.DisplayFor(modelItem => item.RiceOilDeduction)
                </td>
                <td class="text-danger">
                    @Html.DisplayFor(modelItem => item.LeaveDeduction)
                </td>
            <td>
                    @item.CreatedDate?.ToString("yyyy-MM-dd")
            </td>      
        </tr>
            counter++;
}
    </tbody>
</table>


<div class="container">
    @if (pager.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">
            @if (pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Payroll" asp-action="List" asp-route-pg="1">First</a>
                </li>
                <li>
                    <a class="page-link" asp-controller="Payroll" asp-action="List" asp-route-pg="@(pager.CurrentPage - 1)">Previous</a>
                </li>
            }

            @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
            {
                if (pge == 0)
                {
                    continue;
                }
                <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="Payroll" asp-action="List" asp-route-pg="@pge">@pge</a>
                </li>
            }

            @if (pager.CurrentPage < pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Payroll" asp-action="List" asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                            <a class="page-link" asp-controller="Payroll" asp-action="List" asp-route-pg="@(pager.TotalPages)">Last</a>
                </li>
            }
        </ul>
    }
</div>